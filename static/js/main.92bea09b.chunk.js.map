{"version":3,"sources":["components/Navbar.jsx","components/Appreducer.jsx","components/GlobalState.jsx","components/Balance.jsx","components/Income.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Appreducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","Income","amounts","income","expense","Transaction","sign","title","Math","abs","onClick","TransactionList","AddTransaction","useState","setTitle","setAmount","onSubmit","e","preventDefault","newTransaction","nextId","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92bea09b.chunk.js","sourcesContent":["import React from 'react';\r\nimport nav from 'react-bootstrap/Nav';\r\n\r\nconst Navbar=()=> {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Expense Tracker</span>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","const Appreducer=(state=0,action)=>{\r\n    switch(action.type){\r\n\r\n        case 'DELETE':\r\n            return{\r\n                ...state,\r\n                transactions:state.transactions.filter(transaction=>transaction.id!==action.payload)\r\n\r\n            }\r\n\r\n        case 'ADD':\r\n            return{\r\n                ...state,\r\n                transactions:[action.payload,...state.transactions]\r\n            }\r\n\r\n        \r\n        default:return state;\r\n    }\r\n}\r\n\r\nexport default Appreducer;","import React,{createContext,useReducer} from 'react';\r\nimport Appreducer from './Appreducer';\r\n\r\nconst initialState={\r\n    transactions:[\r\n        \r\n\r\n    ]\r\n}\r\n\r\nexport const GlobalContext=createContext(initialState);\r\n\r\nexport const GlobalProvider=({children})=>{\r\n    const [state, dispatch] = useReducer(Appreducer, initialState);\r\n\r\n    //Actions\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type:'DELETE',\r\n            payload:id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type:'ADD',\r\n            payload:transaction\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <GlobalContext.Provider value={{\r\n            transactions:state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React,{useContext} from 'react';\r\nimport { GlobalContext } from './GlobalState';\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts=transactions.map(transaction=>transaction.amount);\r\n    const total=amounts.reduce((acc,item)=>(acc+=item),0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React,{useContext} from 'react';\r\nimport { GlobalContext } from './GlobalState';\r\n\r\nexport const Income = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts=transactions.map(transaction=>transaction.amount);\r\n\r\n    const income=amounts.filter(item=>item>0)\r\n    .reduce((acc,item)=>(acc+=item),0)\r\n    .toFixed(2);\r\n    const expense=amounts.filter(item=>item<0)\r\n    .reduce((acc,item)=>(acc+=item),0)*(-1)\r\n    .toFixed(2);\r\n\r\n    return (\r\n        <div className=\"income-container\">\r\n            <div>\r\n                <h4>Income </h4>\r\n                <p className=\"money plus\">${income}</p>\r\n            </div>\r\n            <div>\r\n                <h4> Expense</h4>\r\n                <p className=\"money minus\">${expense}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from './GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'} >\r\n            {transaction.title} <span>{sign}${Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from './GlobalState';\r\nimport {Transaction} from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                   <Transaction key={transaction.id} transaction={transaction}></Transaction>\r\n                ))}\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react';\r\nimport { GlobalContext } from './GlobalState';\r\nimport nextId from \"react-id-generator\";\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [title,setTitle]=useState(\"Title:\");\r\n    const [amount,setAmount]=useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit=e=>{\r\n      e.preventDefault();\r\n      \r\n      const newTransaction={\r\n        id:nextId(),\r\n        title,\r\n        amount:+amount\r\n        \r\n      }\r\n      \r\n      addTransaction(newTransaction);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n\r\n        <div className=\"form-control\">\r\n          <label className=\"label-css\" htmlFor=\"text\" >Text (Enter the title of income/expense)</label>\r\n          <input className=\"input-info\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Enter text...\" />\r\n          \r\n        </div>\r\n        <br/><br/> <br/>\r\n        <div className=\"form-control\">\r\n          <label className=\"label-css\" htmlFor=\"amount\" >Amount (Enter negative for expense and positive for income)</label> \r\n          \r\n          <input className=\"input-info\" type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <br/>\r\n        <br/> <br/>\r\n        <button className=\"btn-styling\">Add transaction</button>\r\n        \r\n      </form>\r\n      <br/>\r\n    </>\r\n    \r\n    )\r\n}\r\n","import Navbar from './components/Navbar';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Balance } from './components/Balance';\nimport { Income } from './components/Income';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './components/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Navbar></Navbar>\n\n        <div className=\"container\">\n          <Balance></Balance>\n          <Income></Income>\n          <TransactionList></TransactionList>\n          <AddTransaction></AddTransaction>\n        </div>\n\n\n      </div>\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}